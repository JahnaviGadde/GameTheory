{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Game Theory task\\\\frontend\\\\src\\\\components\\\\CourtSchedule.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./Slotstable.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CourtSchedule() {\n  _s();\n  const [selectedDate, setSelectedDate] = useState(\"2024-02-27\");\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n  };\n  const times = [\"4 AM\", \"5 AM\", \"6 AM\", \"7 AM\", \"8 AM\", \"9 AM\", \"10 AM\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"court-schedule\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-selector\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: handleDateChange,\n        className: \"calendar-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Court / Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 13\n            }, this), times.map((time, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              children: time\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: courts.map((court, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"court-name\",\n              children: court.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), times.map((time, i) => {\n              const slot = court.slots.find(slot => slot.time === time);\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: slot ? \"filled-slot\" : \"empty-slot\",\n                children: slot ? slot.event : \"\"\n              }, i, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this);\n            })]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(CourtSchedule, \"CmDAKUPAz1xV4ZJ1Eaiv8EYMRwg=\");\n_c = CourtSchedule;\n;\nvar _c;\n$RefreshReg$(_c, \"CourtSchedule\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CourtSchedule","_s","selectedDate","setSelectedDate","handleDateChange","e","target","value","times","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","time","index","courts","court","name","i","slot","slots","find","event","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Game Theory task/frontend/src/components/CourtSchedule.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./Slotstable.css\";\r\nimport { useState } from \"react\";\r\n\r\nexport default function CourtSchedule (){\r\n\r\n  const [selectedDate, setSelectedDate] = useState(\"2024-02-27\");\r\n\r\n  const handleDateChange = (e) => {\r\n    setSelectedDate(e.target.value);\r\n  };\r\n\r\n  const times = [\"4 AM\", \"5 AM\", \"6 AM\", \"7 AM\", \"8 AM\", \"9 AM\", \"10 AM\"];\r\n\r\n  return (\r\n    <div className=\"court-schedule\">\r\n        <div className=\"date-selector\">\r\n            <input\r\n              type=\"date\"\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n              className=\"calendar-input\"\r\n            />\r\n          </div>\r\n\r\n        <div className=\"table\">\r\n        <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Court / Time</th>\r\n            {times.map((time, index) => (\r\n              <th key={index}>{time}</th>\r\n            ))}\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {courts.map((court, index) => (\r\n            <tr key={index}>\r\n              <td className=\"court-name\">{court.name}</td>\r\n              {times.map((time, i) => {\r\n                const slot = court.slots.find((slot) => slot.time === time);\r\n                return (\r\n                  <td key={i} className={slot ? \"filled-slot\" : \"empty-slot\"}>\r\n                    {slot ? slot.event : \"\"}\r\n                  </td>\r\n                );\r\n              })}\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}