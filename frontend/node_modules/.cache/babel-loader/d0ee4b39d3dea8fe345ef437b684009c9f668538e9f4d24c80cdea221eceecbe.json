{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\Desktop\\\\Game Theory task\\\\frontend\\\\src\\\\components\\\\AdminSlots.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./Slotstable.css\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\n\n// Main component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Adminslots() {\n  _s();\n  const today = new Date();\n  const formattedToday = today.toISOString().split(\"T\")[0];\n  const [selectedDate, setSelectedDate] = useState(formattedToday);\n  const [courts, setCourts] = useState([]);\n  const [bookings, setBookings] = useState({});\n  const {\n    centreId\n  } = useParams();\n  const handleDateChange = e => {\n    setSelectedDate(e.target.value);\n  };\n  const times = [\"5:00 AM - 6:00 AM\", \"6:00 AM - 7:00 AM\", \"7:00 AM - 8:00 AM\", \"8:00 AM - 9:00 AM\", \"9:00 AM - 10:00 AM\", \"10:00 AM - 11:00 AM\", \"11:00 AM - 12:00 PM\", \"12:00 PM - 1:00 PM\", \"1:00 PM - 2:00 PM\", \"2:00 PM - 3:00 PM\", \"3:00 PM - 4:00 PM\", \"4:00 PM - 5:00 PM\", \"5:00 PM - 6:00 PM\", \"6:00 PM - 7:00 PM\", \"7:00 PM - 8:00 PM\", \"8:00 PM - 9:00 PM\", \"9:00 PM - 10:00 PM\", \"10:00 PM - 11:00 PM\", \"11:00 PM - 12:00 AM\"];\n  useEffect(() => {\n    const fetchCourts = async () => {\n      try {\n        const response = await axios.get(`${process.env.REACT_APP_BACKENDAPI}/api/court/center/${centreId}`);\n        setCourts(response.data);\n      } catch (error) {\n        console.error(\"Error fetching courts:\", error);\n      }\n    };\n    fetchCourts();\n  }, [centreId]);\n  useEffect(() => {\n    const fetchBookings = async () => {\n      const bookingData = {};\n      try {\n        for (let court of courts) {\n          const response = await axios.get(`${process.env.REACT_APP_BACKENDAPI}/api/booking/court/${court._id}/date/${selectedDate}`);\n          const bookingsForCourt = response.data;\n          bookingData[court._id] = {};\n          bookingsForCourt.forEach(booking => {\n            const timeSlot = booking.bookingSlot;\n            bookingData[court._id][timeSlot] = booking;\n          });\n        }\n        setBookings(bookingData);\n      } catch (error) {\n        console.error(\"Error fetching booking data\", error);\n      }\n    };\n    if (courts.length) fetchBookings();\n  }, [courts, selectedDate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"court-schedule\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"date-selector\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: selectedDate,\n        onChange: handleDateChange,\n        className: \"calendar-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"schedule-table\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: \"Court Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), times.map((time, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                textAlign: \"center\"\n              },\n              children: time\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: courts.map(court => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"court-name\",\n              style: {\n                textAlign: \"center\"\n              },\n              children: court.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), times.map(timeSlot => {\n              var _bookings$court$_id, _bookings$court$_id$t, _bookings$court$_id2, _bookings$court$_id3, _bookings$court$_id3$;\n              const bookingStatus = (_bookings$court$_id = bookings[court._id]) === null || _bookings$court$_id === void 0 ? void 0 : (_bookings$court$_id$t = _bookings$court$_id[timeSlot]) === null || _bookings$court$_id$t === void 0 ? void 0 : _bookings$court$_id$t.bookingStatus;\n              console.log((_bookings$court$_id2 = bookings[court._id]) === null || _bookings$court$_id2 === void 0 ? void 0 : _bookings$court$_id2[timeSlot]);\n              const userName = (_bookings$court$_id3 = bookings[court._id]) === null || _bookings$court$_id3 === void 0 ? void 0 : (_bookings$court$_id3$ = _bookings$court$_id3[timeSlot]) === null || _bookings$court$_id3$ === void 0 ? void 0 : _bookings$court$_id3$.customername;\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  textAlign: \"center\",\n                  backgroundColor: bookingStatus === \"booked\" ? \"#FF7f7f\" : bookingStatus === \"empty\" ? \"#ADD8E6\" : \"#D3D3D3\",\n                  padding: \"8px\"\n                },\n                children: [bookingStatus === \"booked\" && `Booked by ${userName}`, bookingStatus === \"empty\" && \"Available\", bookingStatus !== \"booked\" && bookingStatus !== \"empty\" && \"\"]\n              }, timeSlot, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 21\n              }, this);\n            })]\n          }, court._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(Adminslots, \"HNL53bdvPVe8mc8Z1f8b8GD7vMs=\", false, function () {\n  return [useParams];\n});\n_c = Adminslots;\nvar _c;\n$RefreshReg$(_c, \"Adminslots\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","axios","jsxDEV","_jsxDEV","Adminslots","_s","today","Date","formattedToday","toISOString","split","selectedDate","setSelectedDate","courts","setCourts","bookings","setBookings","centreId","handleDateChange","e","target","value","times","fetchCourts","response","get","process","env","REACT_APP_BACKENDAPI","data","error","console","fetchBookings","bookingData","court","_id","bookingsForCourt","forEach","booking","timeSlot","bookingSlot","length","className","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","textAlign","map","time","index","name","_bookings$court$_id","_bookings$court$_id$t","_bookings$court$_id2","_bookings$court$_id3","_bookings$court$_id3$","bookingStatus","log","userName","customername","backgroundColor","padding","_c","$RefreshReg$"],"sources":["C:/Users/Dell/Desktop/Game Theory task/frontend/src/components/AdminSlots.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./Slotstable.css\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\n// Main component\r\nexport default function Adminslots() {\r\n  const today = new Date();\r\n  const formattedToday = today.toISOString().split(\"T\")[0];\r\n  const [selectedDate, setSelectedDate] = useState(formattedToday);\r\n  const [courts, setCourts] = useState([]);\r\n  const [bookings, setBookings] = useState({}); \r\n\r\n  const { centreId } = useParams(); \r\n\r\n  const handleDateChange = (e) => {\r\n    setSelectedDate(e.target.value);\r\n  };\r\n\r\n  const times = [\"5:00 AM - 6:00 AM\", \"6:00 AM - 7:00 AM\", \"7:00 AM - 8:00 AM\", \"8:00 AM - 9:00 AM\", \"9:00 AM - 10:00 AM\",\"10:00 AM - 11:00 AM\",\"11:00 AM - 12:00 PM\",\"12:00 PM - 1:00 PM\",\"1:00 PM - 2:00 PM\",\"2:00 PM - 3:00 PM\",\"3:00 PM - 4:00 PM\",\"4:00 PM - 5:00 PM\",\"5:00 PM - 6:00 PM\",\"6:00 PM - 7:00 PM\",\"7:00 PM - 8:00 PM\",\"8:00 PM - 9:00 PM\",\"9:00 PM - 10:00 PM\",\"10:00 PM - 11:00 PM\",\"11:00 PM - 12:00 AM\",];\r\n\r\n  useEffect(() => {\r\n    const fetchCourts = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `${process.env.REACT_APP_BACKENDAPI}/api/court/center/${centreId}`\r\n        );\r\n        setCourts(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching courts:\", error);\r\n      }\r\n    };\r\n\r\n    fetchCourts();\r\n  }, [centreId]);\r\n\r\n  useEffect(() => {\r\n    const fetchBookings = async () => {\r\n      const bookingData = {}; \r\n\r\n      try {\r\n        for (let court of courts) {\r\n          const response = await axios.get(\r\n            `${process.env.REACT_APP_BACKENDAPI}/api/booking/court/${court._id}/date/${selectedDate}`\r\n          );\r\n\r\n          const bookingsForCourt = response.data;\r\n          bookingData[court._id] = {};\r\n\r\n          bookingsForCourt.forEach((booking) => {\r\n            const timeSlot = booking.bookingSlot;\r\n            bookingData[court._id][timeSlot] = booking;\r\n          });\r\n        }\r\n\r\n        setBookings(bookingData);\r\n      } catch (error) {\r\n        console.error(\"Error fetching booking data\", error);\r\n      }\r\n    };\r\n\r\n    if (courts.length) fetchBookings();\r\n  }, [courts, selectedDate]);\r\n\r\n  return (\r\n    <div className=\"court-schedule\">\r\n      <div className=\"date-selector\">\r\n        <input\r\n          type=\"date\"\r\n          value={selectedDate}\r\n          onChange={handleDateChange}\r\n          className=\"calendar-input\"\r\n        />\r\n      </div>\r\n\r\n      <div className=\"schedule-table\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ textAlign: \"center\" }}>Court Name</th>\r\n              {times.map((time, index) => (\r\n                <th key={index} style={{ textAlign: \"center\" }}>\r\n                  {time}\r\n                </th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {courts.map((court) => (\r\n              <tr key={court._id}>\r\n\r\n                <td className=\"court-name\" style={{ textAlign: \"center\" }}>\r\n                  {court.name}\r\n                </td>\r\n                {times.map((timeSlot) => {\r\n                  const bookingStatus = bookings[court._id]?.[timeSlot]?.bookingStatus;\r\n                  console.log(bookings[court._id]?.[timeSlot]);\r\n                  const userName = bookings[court._id]?.[timeSlot]?.customername;\r\n                  return (\r\n                    <td\r\n                  key={timeSlot}\r\n                  style={{\r\n                    textAlign: \"center\",\r\n                    backgroundColor:\r\n                      bookingStatus === \"booked\"\r\n                        ? \"#FF7f7f\" \r\n                        : bookingStatus === \"empty\"\r\n                        ? \"#ADD8E6\" \r\n                        : \"#D3D3D3\",\r\n                    padding: \"8px\",\r\n                  }}\r\n                >\r\n                  {bookingStatus === \"booked\" && `Booked by ${userName}`}\r\n                  {bookingStatus === \"empty\" && \"Available\"}\r\n                  {bookingStatus !== \"booked\" && bookingStatus !== \"empty\" && \"\"}\r\n                </td>\r\n                  );\r\n                })}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}